@model  Affidavit.Models.ProblemVM

<div class="modal formulary add_to_current">

    @using (Ajax.BeginForm("CreateEdit", "Problem", null, new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace
                                                                                ,
        UpdateTargetId = "CreateProblemContent"
                                                                                ,
        OnBegin = "OnProblemCreationBegin"
                                                                                ,
        OnSuccess = "OnProblemCreationSuccess"
    }, new { @id = "CreateProblemForm" }))
    {
        <h1>Add to Current Process: @Model.ProcessName</h1>

        <input type="hidden" name="Id" value="@Model.Id" />
        <input type="hidden" name="ProcessId" value="@Model.ProcessId" />
        @Html.HiddenFor(x => x.UserCreation)
        @Html.HiddenFor(x => x.DateCreation)

        <div class="contiene">
            <div class="row">
                <label>Select priority</label>
                @Html.DropDownListFor(x => x.Priority, new List<SelectListItem> {
                                    new SelectListItem() { Text="1", Value="1"} ,
                                    new SelectListItem() { Text = "2", Value = "2" },
                                    new SelectListItem() { Text="3", Value="3"} ,
                                    new SelectListItem() { Text="4", Value="4"} ,
                                    new SelectListItem() { Text="5", Value="5"} })

            </div>
            <div class="row">
                <label>Problem*</label>
                @Html.TextAreaFor(x => x.ProblemDescription)
                <p class="required">
                    @Html.ValidationMessageFor(x => x.ProblemDescription)
                </p>
            </div>
            <div class="row">
                <label>Opportunity*</label>
                @Html.TextAreaFor(x => x.Opportunity)
                <p class="required">
                    @Html.ValidationMessageFor(x => x.Opportunity)
                </p>
            </div>
            <div class="row">
                <label>Technology*</label>
                @Html.TextBoxFor(x => x.Technology)
                <p class="required">
                    @Html.ValidationMessageFor(x => x.Technology)
                </p>
            </div>
            <div class="row">
                <label>
                    @Html.CheckBoxFor(x => x.Exist)
                    @*<input type="checkbox" name="checkboxGroup1" value="opción" id="checkbox1_2">*@
                    Exist
                </label>

                <label>
                    @Html.CheckBoxFor(x => x.Microsoft)
                    @*<input type="checkbox" name="checkboxGroup1" value="opción" id="checkbox1_3">*@
                    Microsoft
                </label>
            </div>
            <div class="row">
                <label>Inventory*</label>
                @Html.TextBoxFor(x => x.Inventory)
                <p class="required">
                    @Html.ValidationMessageFor(x => x.Inventory)
                </p>
            </div>
            <div class="row">
                <label>
                    @Html.CheckBoxFor(x => x.Solved)
                    Solved
                </label>

            </div>
            <div class="row">
                <label>Solution</label>
                @Html.TextAreaFor(x => x.Solution)
                <p class="required">
                    @Html.ValidationMessageFor(x => x.Solution)
                </p>
            </div>
            <div class="row last">
                <a href="#" target="_self" class="button gris cerrar f_left">CANCEL</a>
                <input type="submit" value="OK" class="button rojo f_right" />

            </div>
        </div>


    }

</div>

