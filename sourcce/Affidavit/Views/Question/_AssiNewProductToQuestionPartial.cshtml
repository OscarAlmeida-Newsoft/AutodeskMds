@model Affidavit.Models.Question.AssignProductToQuestionViewModel
@using Affidavit.Utils
<style type="text/css">
    .requiredMessage {
        float: right;
        margin: -3px 80px 0px 0px;
        padding: 0px 0px 10px 0px;
    }
</style>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

    @*@using (Html.BeginForm("AssiNewProductToQuestion", "Question", FormMethod.Post))
        {*@
    @Html.HiddenFor(x => x.QuestionID)

    <div class="form-group" style="margin-bottom: 15px !important;">
        @Html.LabelFor(model => model.ProductFamilyID, new { @class = "col-sm-5 control-label dropdownSeparation" })
        @Html.DropDownListFor(model => model.ProductFamilyID, Model.ProductFamilyList, "-- Select One --", new { @class = "form-control dropdownSeparation" })
        @Html.ValidationMessageFor(model => model.ProductFamilyID, "", new { @class = "text-danger requiredMessage", style = "margin: -6px 80px 0px 0px;" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DisplayOrder, new { @class = "col-sm-5 control-label" })
        @Html.TextBoxFor(model => model.DisplayOrder, null, new { @class = "form-control integerOnly", @type = "number", @min = 1 })
        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger requiredMessage", style= "margin: 6px 80px 0px 0px;" })
    </div>
    <div class="modal-footer">
        @*<button type="button" class="btn" id="cancelAssign" style="height:inherit !important;" data-dismiss="modal">@TranslatorHelper.TranslateTextByIdentifier("Old_LabelCancel")</button>
            <button type="submit" class="btn btn-primary" style="height:inherit !important;">@TranslatorHelper.TranslateTextByIdentifier("Old_LabelSave")</button>*@
    </div>
    @*}*@
