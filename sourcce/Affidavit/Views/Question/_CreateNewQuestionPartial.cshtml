@model Affidavit.Models.Question.CreateNewQuestionViewModel
@using Affidavit.Utils
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<style type="text/css">
    .requiredMessage{
        float: right; 
        margin: -3px 80px 0px 0px;
        padding: 0px 0px 10px 0px;
    }
</style>

<div id="pagina">
    @*<div class="centro">*@
        @*@using (Html.BeginForm("CreateNewQuestion", "Question", FormMethod.Post))
            {*@
        @*<div class="form-group">  
                @Html.LabelFor(model => model.QuestionText, new { @class = "col-sm-5 control-label" })
                @Html.EditorFor(model => model.QuestionText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuestionText)
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ResponseDataTypeID, new { @class = "col-sm-5 control-label dropdownSeparation" })
            @Html.DropDownListFor(model => model.ResponseDataTypeID, Model.ResponseDataTypeList, "-- Select One --", new { @class = "form-control dropdownSeparation" })
            @Html.ValidationMessageFor(model => model.ResponseDataTypeID, "", new { @class = "text-danger requiredMessage" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProductFamilyID, new { @class = "col-sm-5 control-label dropdownSeparation" })
            @Html.DropDownListFor(model => model.ProductFamilyID, Model.ProductFamilyList, "-- Select One --", new { @class = "form-control dropdownSeparation" })
            @Html.ValidationMessageFor(model => model.ProductFamilyID, "", new { @class = "text-danger requiredMessage" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RelatedQuestionIDResponse, new { @class = "col-sm-5 control-label dropdownSeparation" })
            @Html.DropDownListFor(model => model.RelatedQuestionIDResponse,
            new[]
            {
                new SelectListItem{ Value = "0", Text = "False" },
                new SelectListItem{ Value = "1", Text = "True" }

            }, new { @class = "form-control dropdownSeparation", @onchange = "CallChangefunc(this.value)" })
            @*@Html.ValidationMessageFor(model => model.LanguageID)*@
        </div>
        <div class="form-group response" style="display:none;" id="response">
            @Html.LabelFor(model => model.RelatedQuestionID, new { @class = "col-sm-5 control-label dropdownSeparation" })
            @Html.DropDownListFor(model => model.RelatedQuestionID, Model.RelatedQuestionList, "-- Select One --", new { @class = "form-control dropdownSeparation" })
            @Html.ValidationMessageFor(model => model.QuestionID, "", new { @class = "text-danger requiredMessage" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Order, new { @class = "col-sm-5 control-label" })
            @Html.TextBox("Order", null, new { @class = "form-control integerOnly", @type = "number", @min = 1 })
            @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger requiredMessage" })
        </div>

        <table border="0" cellspacing="0" cellpadding="0" class="especial_03 table-bordered">
            <tr class="cabezote text-center text-uppercase">
                <th class="bg-success thSize" style="width: 90px !important;">@TranslatorHelper.TranslateTextByIdentifier("Old_LabelIdioma")</th>
                <th class="bg-success thSize">@TranslatorHelper.TranslateTextByIdentifier("Old_LabelQuestionText")</th>
            </tr>

            @{ var k = 0; var j = 0;}
            @foreach (var item in Model.Languages)
            {
                <tr>
                    <th style="width: 90px !important;">@Html.Label(@item.LanguageName, new { style = "text-align: center !important;" })</th>
                    <td>
                        @Html.TextBox("QuestionsxLanguages[" + k + "].QuestionText", null, new { @class = "form-control", required = "required"@*, style="margin-left: 100px;"*@ })
                        @Html.ValidationMessageFor(m => m.QuestionsxLanguages[k].QuestionText, "", new { @class = "text-danger requiredMessage"@*, style = "margin-top: 10px; margin-right: 100px;"*@ })
                        @Html.Hidden("QuestionsxLanguages[" + k + "].LanguageID", item.LanguageID)
                    </td>
                </tr>
                k++;
            }
        </table>

        <div class="modal-footer">
            @*<button type="button" class="btn" id="cancelCreate" style="height:inherit !important;" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary" style="height:inherit !important;">Save</button>*@
        </div>
        @*}
    </div*@
</div>